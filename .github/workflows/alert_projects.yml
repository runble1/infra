name: Code Scanning to Issues

on:
  #  code_scanning_alert:
  #    types:
  #      - appeared
  #      - fixed
  #      - closed
  workflow_run:
    workflows: ["Code Scanning", "trivy"]
    types:
      - completed
  workflow_dispatch:

permissions:
  #actions: read
  #checks: read
  #contents: read
  #issues: write
  #security-events: read
  #repository-projects: write
  actions: write
  checks: write
  contents: write
  deployments: write
  id-token: write
  issues: write
  discussions: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

env:
  PROJECT_NAME: infra-kanban
  REPO_OWNER: runble1
  REPO_NAME: infra

jobs:
  alert_handling:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Authenticate with GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh auth refresh -s project --hostname github.com --with-token ${{ secrets.GITHUB_TOKEN }}

      - name: Create/update issues from Code Scanning alerts
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          alerts=$(gh api -X GET /repos/${{ github.repository }}/code-scanning/alerts --jq '.[] | select(.status == "open" or .status == "fixed" or .status == "closed")')

          for alert in "${alerts[@]}"; do
            alert_id=$(echo "$alert" | jq -r '.id')
            rule_name=$(echo "$alert" | jq -r '.rule.name')
            alert_url=$(echo "$alert" | jq -r '.html_url')
            state=$(echo "$alert" | jq -r '.status')

            issue_title="Code Scanning Alert: $rule_name"
            issue_body="Please address the following Code Scanning alert:\n\n- [ ] $rule_name ($alert_url)"

            if [[ "$state" == "open" ]]; then
              existing_issue_number=$(gh issue list --label "code scanning" --search "$issue_title" --json number -q ".[0].number")

              if [[ "$existing_issue_number" ]]; then
                gh issue update "$existing_issue_number" --body "$issue_body"
              else
                gh issue create --title "$issue_title" --body "$issue_body" --label "code scanning"
              fi
            elif [[ "$state" == "fixed" || "$state" == "closed" ]]; then
              existing_issue_number=$(gh issue list --label "code scanning" --search "$issue_title" --json number -q ".[0].number")

              if [[ "$existing_issue_number" ]]; then
                gh issue update "$existing_issue_number" --state closed
              fi
            fi
          done

      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: ${{ secrets.TF_VAR_SLACK_CHANNEL_ID }}
          payload: |
            {
              "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
